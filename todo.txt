current:

todo:

races

figure out atribute system and how it will relate to races
    display attributes of current build on right of screen in bikeshop

figure out system to purchase non-inventory items
    maybe change bikeshop to populate from items instead of from inventory?
    clicking on non-unlocked item opens a pop up to purchase it
    you can't see the stats until purchased ofc, encourage a mf to buy everything

remove items in inventory manager
inventory manager cleanup + comments

could mainmenu and bike shop share an inference module?
    what is cost benefit
    they need hella cleaning up regardless

bikeshop cleanup, comments need redone
    addbutton method? lots of repeat calls to vars and similar math
    also just a big mess, maybe could use abstracted into smaller parts
    as part of shared inference module upgrade?

fix god awful optimization between inventorymanager and bikeshop,
reads through every item in players inventory every frame
will require restructuring in bikeshop and rewrite of acess methods
in inventoryManager and bike classes

implement dirty squares in gui screens?
assuming it will be needed for game screens

test + fix screen size reactivity

main menu kinda just need a rewrite lmao

fix bug where indexoutofrange if you leave the shop, come back in, select a button

figure out: money and cost of items, add element to items.json?

RACE TODO:
controls:
a / d to lean over / steer
w to accelerate
spacebar to skid (only way to slow down)
steps bike out sideways and alters path depending on what direction character is leaning

get large texture that represents map
get some sort of hitbox that represents different areas

thing that holds bike up at start that dissapears as we pan away

set up player sprite given information from inventoryManager

customizable mechanics:
not meant to be realistic, meant to make building fun
front tooth count and rear tooth cound will affect acceleration and top speed
lighter components will make the bike lean side to side faster
heavier components will make the bike skid for longer (decelrate less?)
goal: large noticable difference in handling between heaviest and lightest bike, 
   should be able to feel the difference in one or two parts worth of upgrades

Rect.colliderect() and pygame.math.Vector2.collidePoint()

player sprites change based on bike build